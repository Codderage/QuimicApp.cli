{"version":3,"sources":["components/practices/practice/TableCompound.jsx","components/practices/practice/Practice.styled.jsx","components/practices/practice/TableData.jsx","components/practices/practice/Practice.jsx","containers/practices/view/PracticePage.jsx"],"names":["TableWrapper","styled","div","h1","columns","title","dataIndex","sorter","a","b","picos","substancias","minutos","altura","data","i","push","key","pagination","position","CompoundTable","useState","bordered","loading","size","showHeader","rowSelection","scroll","undefined","hasData","tableLayout","top","bottom","xScroll","yScroll","state","y","x","tableColumns","map","item","ellipsis","fixed","length","className","dataSource","Practices","datos","setDatos","array","useEffect","axios","get","response","nombre","nombre_columna","longitud","longitud_columna","diametro","diametro_interior_columna","tamano","tamano_particula","temperatura","velocidad","velocidad_flujo","eluyente","detector","detector_uv","getData","layout","column","Item","label","inicioChart","finChart","tiempoProcesamientoColumna","inicio","peak","fin","forEach","columna","Practice","props","id","class","TableCompound","TableData","height","width","datasets","borderColor","borderWidth","pointRadius","pointHoverRadius","fill","tension","showLine","options","maintainAspectRatio","responsive","tooltips","enabled","plugins","legend","display","text","scales","xAxes","type","time","displayFormats","second","scaleLabel","labelString","gridLines","color","drawOnChartArea","yAxes","disabled","onClick","grafico","window","document","getElementById","html2canvas","then","canvas","img","toDataURL","pdf","jspdf","addImage","clientWidth","clientHeight","save","aPdf","htmlFor","name","cols","rows","PracticePage","useParams","SideNav"],"mappings":"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","file":"static/js/11.6c0bf6de.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Table, Space } from \"antd\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEdit, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { TableWrapper } from \"./Practice.styled\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Picos\",\r\n    dataIndex: \"picos\",\r\n    sorter: (a, b) => a.picos - b.picos,\r\n  },\r\n  {\r\n    title: \"Substancias\",\r\n    dataIndex: \"substancias\",\r\n    sorter: (a, b) => a.substancias - b.substancias,\r\n  },\r\n  {\r\n    title: \"Minutos\",\r\n    dataIndex: \"minutos\",\r\n    sorter: (a, b) => a.minutos - b.minutos,\r\n  },\r\n  {\r\n    title: \"Altura\",\r\n    dataIndex: \"altura\",\r\n    sorter: (a, b) => a.altura - b.altura,\r\n  },\r\n];\r\n\r\nconst data = [];\r\nfor (let i = 1; i <= 6; i++) {\r\n  data.push({\r\n    key: i,\r\n    picos: i,\r\n    substancias: \"Naphtalene\",\r\n    minutos: 3.3,\r\n    altura: 125,\r\n  });\r\n}\r\n\r\nconst showHeader = true;\r\n\r\nconst pagination = { position: \"bottom\" };\r\n\r\nconst CompoundTable = () => {\r\n  const [state, setState] = useState({\r\n    bordered: false,\r\n    loading: false,\r\n    pagination,\r\n    size: \"default\",\r\n    showHeader,\r\n    rowSelection: {},\r\n    scroll: undefined,\r\n    hasData: true,\r\n    tableLayout: \"fixed\",\r\n    top: \"none\",\r\n    bottom: \"bottomRight\",\r\n    xScroll: false,\r\n    yScroll: false,\r\n  });\r\n\r\n  const handleDataChange = (hasData) => {\r\n    this.setState({ hasData });\r\n  };\r\n\r\n  const scroll = {};\r\n  if (state.yScroll) {\r\n    scroll.y = 240;\r\n  }\r\n  if (state.xScroll) {\r\n    scroll.x = \"100vw\";\r\n  }\r\n\r\n  const tableColumns = columns.map((item) => ({\r\n    ...item,\r\n    ellipsis: state.ellipsis,\r\n  }));\r\n  if (state.xScroll === \"fixed\") {\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n  }\r\n\r\n  return (\r\n    <TableWrapper className=\"col-6\">\r\n      <Table\r\n        {...state}\r\n        pagination={{ position: [state.top, state.bottom] }}\r\n        columns={tableColumns}\r\n        dataSource={state.hasData ? data : null}\r\n        scroll={scroll}\r\n        className=\"compound-table\"\r\n      />\r\n    </TableWrapper>\r\n  );\r\n};\r\n\r\nexport default CompoundTable;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TableWrapper = styled.div`\r\n  & .compound-table,\r\n  .data-table {\r\n    & table {\r\n      border-collapse: separate;\r\n      border-spacing: 0 0.3rem;\r\n    }\r\n    & .ant-table-selection,\r\n    .ant-checkbox-wrapper {\r\n      display: none;\r\n    }\r\n    & tr {\r\n      height: 5rem;\r\n      font-size: 17px;\r\n      &:hover > td {\r\n        background-color: #6bb1c5;\r\n      }\r\n      & td:last-of-type {\r\n        text-align: center;\r\n      }\r\n    }\r\n    & thead tr th {\r\n      background-color: #0a1128;\r\n      color: #fefcfb;\r\n    }\r\n    & tr td {\r\n      background-color: #0a1128;\r\n      color: #fefcfb;\r\n    }\r\n    & tr td:first-child,\r\n    tr th:first-child {\r\n      border-top-left-radius: 0.3rem;\r\n      border-bottom-left-radius: 0.3rem;\r\n    }\r\n    & tr td:last-child,\r\n    tr th:last-child {\r\n      border-top-right-radius: 0.3rem;\r\n      border-bottom-right-radius: 0.3rem;\r\n    }\r\n    & .ant-table-column-has-sorters:hover {\r\n      background-color: #6bb1c5;\r\n    }\r\n    & td div div {\r\n      &:first-child {\r\n        a path {\r\n          fill: #3d6e9c;\r\n        }\r\n      }\r\n      &:last-child {\r\n        a path {\r\n          fill: #c56b6b;\r\n        }\r\n      }\r\n      & a {\r\n        padding: 0rem 1rem;\r\n        border: none;\r\n        border-radius: 0.2rem;\r\n        font-weight: 400;\r\n        text-decoration: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const sH1 = styled.h1`\r\n   font-size= 2em !important;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../../common/http\";\r\n\r\nimport { Descriptions } from \"antd\";\r\n\r\nconst Practices = () => {\r\n  const [datos, setDatos] = useState(null);\r\n\r\n  const array = [];\r\n\r\n  const condId = 5;\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        const response = await axios.get(\"condicion/\" + condId);\r\n        array.push({\r\n          nombre: response.data.nombre_columna,\r\n          longitud: response.data.longitud_columna,\r\n          diametro: response.data.diametro_interior_columna,\r\n          tamano: response.data.tamano_particula,\r\n          temperatura: response.data.temperatura,\r\n          velocidad: response.data.velocidad_flujo,\r\n          eluyente: response.data.eluyente,\r\n          detector: response.data.detector_uv,\r\n        });\r\n        setDatos(array);\r\n      } catch (e) {}\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  // console.log(array);\r\n  // datos ? console.log(datos[0].nombre) : console.log(\"hola\");\r\n\r\n  return (\r\n    <Descriptions\r\n      title=\"Condiciones\"\r\n      layout=\"horizontal\"\r\n      column={1}\r\n      bordered={true}\r\n      className=\"col-6\"\r\n    >\r\n      <Descriptions.Item label=\"Nombre columna\">\r\n        {datos ? datos[0].nombre : \"\"}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Longitud columna\">\r\n        {datos ? datos[0].longitud : \"\"}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Diámetro interior columna\">\r\n        {datos ? datos[0].diametro : \"\"}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Tamaño de partícula\">\r\n        {datos ? datos[0].tamano : \"\"}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Temperatura\">\r\n        {datos ? datos[0].temperatura : \"\"}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Velocidad de flujo\">\r\n        {datos ? datos[0].velocidad : \"\"}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Eluyente\">\r\n        {datos ? datos[0].eluyente : \"\"}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Detector UV\">\r\n        {datos ? datos[0].detector : \"\"}\r\n      </Descriptions.Item>\r\n    </Descriptions>\r\n  );\r\n};\r\n\r\nexport default Practices;\r\n","import React, { useState } from \"react\";\r\nimport { Scatter } from \"react-chartjs-2\";\r\nimport html2canvas from \"html2canvas\";\r\nimport jspdf from \"jspdf\";\r\nimport \"./practice.css\";\r\n\r\nimport TableCompound from \"./TableCompound\";\r\nimport TableData from \"./TableData\";\r\n\r\n//Modelo de objeto JSON 'columnas' obtenido de API\r\nconst columnas = [\r\n  { inicio: { x: 20, y: 0 }, peak: { x: 21, y: 130 }, fin: { x: 22, y: 0 } },\r\n  { inicio: { x: 29, y: 0 }, peak: { x: 31, y: 215 }, fin: { x: 33, y: 0 } },\r\n  { inicio: { x: 80, y: 0 }, peak: { x: 85, y: 110 }, fin: { x: 90, y: 0 } },\r\n];\r\n\r\n//tiempo medido en segundos\r\nconst tiempoProcesamientoColumna = 150;\r\nconst inicioChart = { x: 0, y: 0 };\r\nconst finChart = { x: tiempoProcesamientoColumna * 1000, y: 0 };\r\n\r\n//conversion de segundos a milisegundos y push a array data\r\nlet data = [];\r\n\r\ncolumnas.forEach(function (columna) {\r\n  data.push(inicioChart);\r\n  columna.inicio.x *= 1000;\r\n  data.push(columna.inicio);\r\n  columna.peak.x *= 1000;\r\n  data.push(columna.peak);\r\n  columna.fin.x *= 1000;\r\n  data.push(columna.fin);\r\n  data.push(finChart);\r\n});\r\n\r\nconst aPdf = () => {\r\n  let grafico = window.document.getElementById(\"aPdf\");\r\n\r\n  html2canvas(grafico).then((canvas) => {\r\n    const img = canvas.toDataURL(\"image/png\");\r\n    const pdf = new jspdf(\"l\", \"px\");\r\n    pdf.addImage(\r\n      img,\r\n      \"PNG\",\r\n      50, //x\r\n      25, // y\r\n      grafico.clientWidth / 2, // width\r\n      grafico.clientHeight / 2 // height\r\n      // \"\",\r\n      // \"NONE\"\r\n    );\r\n    pdf.save(\"practica.pdf\");\r\n  });\r\n};\r\n\r\nconst Practice = (props) => {\r\n  const [state, setState] = useState(false);\r\n\r\n  const id = props.id;\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"p-5 text-center\">Prueba práctica {id}</h1>\r\n\r\n      <div class=\"row\">\r\n        <TableCompound />\r\n        <TableData />\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col col-md-12\">\r\n          <div>\r\n            <Scatter\r\n              id=\"aPdf\"\r\n              height={400}\r\n              width={600}\r\n              data={{\r\n                datasets: [\r\n                  {\r\n                    data,\r\n                    borderColor: \"black\",\r\n                    borderWidth: 1,\r\n                    pointRadius: 0,\r\n                    pointHoverRadius: 0,\r\n                    fill: false,\r\n                    tension: 0.02,\r\n                    showLine: true,\r\n                  },\r\n                ],\r\n              }}\r\n              options={{\r\n                maintainAspectRatio: false,\r\n                responsive: true,\r\n                tooltips: {\r\n                  enabled: false,\r\n                },\r\n                plugins: {\r\n                  legend: false,\r\n                },\r\n                title: {\r\n                  display: true,\r\n                  text: \"HPLC\",\r\n                },\r\n                scales: {\r\n                  xAxes: [\r\n                    {\r\n                      type: \"time\",\r\n                      time: {\r\n                        displayFormats: {\r\n                          second: \"mm:ss\",\r\n                        },\r\n                      },\r\n                      scaleLabel: {\r\n                        display: true,\r\n                        labelString: \"Tiempo\",\r\n                      },\r\n                      gridLines: {\r\n                        color: \"#888\",\r\n                        drawOnChartArea: false,\r\n                      },\r\n                    },\r\n                  ],\r\n                  yAxes: [\r\n                    {\r\n                      gridLines: {\r\n                        color: \"#888\",\r\n                        drawOnChartArea: false,\r\n                      },\r\n                      scaleLabel: {\r\n                        display: true,\r\n                        labelString: \"Altura\",\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button disabled onClick={() => aPdf()}>\r\n              Generar PDF\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"container commentsWrapper\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"comentarioProfesor\">Comentario Profesor</label>\r\n              <br />\r\n              <textarea\r\n                name=\"comentarioProfesor\"\r\n                id=\"comentarioProfesor\"\r\n                cols=\"40\"\r\n                rows=\"8\"\r\n                className=\"tArea\"\r\n                // readonly=\"true\"\r\n              ></textarea>\r\n              <br />\r\n              <button type=\"button\" class=\"btn btn-primary\">\r\n                Guardar Comentario\r\n              </button>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"respuestaAlumno\">Respuesta Alumno</label>\r\n              <br />\r\n              <textarea\r\n                name=\"respuestaAlumno\"\r\n                id=\"respuestaAlumno\"\r\n                cols=\"40\"\r\n                rows=\"8\"\r\n                className=\"tArea\"\r\n                // readonly=\"true\"\r\n              ></textarea>\r\n              <br />\r\n              <button type=\"button\" class=\"btn btn-primary\">\r\n                Guardar Respuesta\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n","import React, { useEffect, useState, createContext } from \"react\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport SideNavBar from \"../../../components/common/sideNav/SideNav\";\r\nimport Practice from \"../../../components/practices/practice/Practice\";\r\n\r\nconst PracticePage = () => {\r\n  const [state, setState] = useState(false);\r\n\r\n  const { id } = useParams();\r\n\r\n  return (\r\n    <>\r\n      <SideNavBar />\r\n      <div className=\"container\">\r\n        <Practice id={id} />\r\n      </div>\r\n      ;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PracticePage;\r\n"],"sourceRoot":""}