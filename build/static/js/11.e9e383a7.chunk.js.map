{"version":3,"sources":["components/searchBar/SearchBar.styled.jsx","components/searchBar/SearchBar.jsx","components/groups/Groups.styled.jsx","components/groups/Groups.jsx","containers/groups/groupsLanding/GroupsLanding.jsx"],"names":["SearchBarWrapper","styled","div","SearchBar","useState","keyword","setKeyword","className","icon","faSearch","type","value","onChange","e","target","TableWrapper","CreateButton","a","columns","title","dataIndex","sorter","b","nombre","sortDirections","responsive","apellidos","grupo","email","pagination","position","Grupos","datos","setDatos","array","useEffect","sessionStorage","getItem","axios","get","then","response","status","i","data","push","key","id_grupo","nombre_grupo","onClick","onEdit","id","faEdit","onDelete","faTimes","length","catch","error","swal","text","button","timer","nombreUsuario","Swal","fire","html","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","focusConfirm","preConfirm","Enombre","getPopup","querySelector","showValidationMessage","result","isConfirmed","carga","allowOutsideClick","peticion","put","window","location","reload","onCreate","peticionCrear","post","buttons","dangerMode","willDelete","delete","JSON","parse","id_profesor","clear","href","bordered","loading","size","showHeader","rowSelection","scroll","undefined","hasData","tableLayout","top","bottom","xScroll","yScroll","state","usuarioLogeado","splice","y","x","tableColumns","map","item","ellipsis","fixed","username","onCreateBut","pageSize","dataSource","GroupsLanding","SideNav","Groups"],"mappings":"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","file":"static/js/11.e9e383a7.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const SearchBarWrapper = styled.div`\n  position: relative;\n  margin: 3rem 0rem;\n\n  & input {\n    width: 100%;\n    height: 3.2rem;\n    border-radius: 1.5rem;\n    filter: drop-shadow(0rem 0.19rem 0.2rem #757575);\n    border: none;\n    padding-left: 4rem;\n\n    &:focus {\n      outline: none;\n    }\n  }\n  & .search-icon {\n    font-size: 20px;\n    position: absolute;\n    left: 30px;\n    top: 50%;\n    transform: translateY(-50%);\n    z-index: 2;\n    & path {\n      fill: #0a1128;\n    }\n  }\n`;\n","import React, { useState } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { SearchBarWrapper } from \"./SearchBar.styled\";\n\nconst SearchBar = () => {\n  const { keyword, setKeyword } = useState(false);\n\n  return (\n    <>\n      <SearchBarWrapper className=\"search-bar-wrapper\">\n        <FontAwesomeIcon icon={faSearch} className=\"search-icon\" />\n        <input\n          type=\"text\"\n          key=\"searchUser\"\n          value={keyword}\n          onChange={(e) => setKeyword(e.target.value)}\n        ></input>\n      </SearchBarWrapper>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import styled from \"styled-components\";\n\nexport const TableWrapper = styled.div`\n  & .groups-table {\n    & table {\n      border-collapse: separate;\n      border-spacing: 0 0.3rem;\n    }\n    & .ant-table-selection,\n    .ant-checkbox-wrapper {\n      display: none;\n    }\n    & tr {\n      height: 5rem;\n      font-size: 17px;\n      &:hover > td {\n        background-color: #6bb1c5;\n      }\n    }\n    & thead tr th {\n      background-color: #0a1128;\n      color: #fefcfb;\n    }\n    & tr td {\n      background-color: #0a1128;\n      color: #fefcfb;\n    }\n    & tr td:first-child,\n    tr th:first-child {\n      border-top-left-radius: 0.3rem;\n      border-bottom-left-radius: 0.3rem;\n    }\n    & tr td:last-child,\n    tr th:last-child {\n      border-top-right-radius: 0.3rem;\n      border-bottom-right-radius: 0.3rem;\n    }\n    & .ant-table-column-has-sorters:hover {\n      background-color: #6bb1c5;\n    }\n    & td div div {\n      &:first-child {\n        a path {\n          fill: #3d6e9c;\n        }\n      }\n      &:last-child {\n        a path {\n          fill: #c56b6b;\n        }\n      }\n      & a {\n        padding: 0rem 0rem;\n        border: none;\n        border-radius: 0.2rem;\n        font-weight: 400;\n        text-decoration: none;\n      }\n    }\n  }\n`;\n\nexport const CreateButton = styled.a`\n  display: block;\n  width: 160px;\n  height: 45px;\n  background: #6bb1c5;\n  padding: 10px;\n  margin-bottom: 2rem;\n  text-align: center;\n  border-radius: 5px;\n  color: white;\n  font-weight: bold;\n  background-color: #6bb1c5;\n  text-decoration: none;\n  box-shadow: 0rem 0.2rem 0.2rem 0rem #bdbdbd;\n  float: right;\n  &:hover {\n    color: white;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Space } from \"antd\";\nimport axios from \"../common/http\";\nimport swal from \"sweetalert\";\nimport Swal from \"sweetalert2\";\nimport carga from \"../../assets/img/load/ajax-loader.gif\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTimes, faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { CreateButton, TableWrapper } from \"./Groups.styled\";\n\n// import \"./groups.css\";\n\nconst columns = [\n  {\n    title: \"Nombre\",\n    dataIndex: \"nombre\",\n    //sorter: (a, b) => a.nombre - b.nombre,\n    sorter: (a, b) => {\n      if (a.nombre < b.nombre) return 1;\n      if (b.nombre < a.nombre) return -1;\n      return 0;\n    },\n    sortDirections: [\"descend\", \"ascend\"],\n  },\n  {\n    title: \"Apellidos\",\n    dataIndex: \"apellidos\",\n    //sorter: (a, b) => a.apellidos - b.apellidos,\n    responsive: [\"lg\"],\n    sorter: (a, b) => {\n      if (a.apellidos < b.apellidos) return 1;\n      if (b.apellidos < a.apellidos) return -1;\n      return 0;\n    },\n    sortDirections: [\"descend\", \"ascend\"],\n  },\n\n  {\n    title: \"Grupo\",\n    dataIndex: \"grupo\",\n    //sorter: (a, b) => a.grupo - b.grupo,\n    sorter: (a, b) => {\n      if (a.grupo < b.grupo) return 1;\n      if (b.grupo < a.grupo) return -1;\n      return 0;\n    },\n    sortDirections: [\"descend\", \"ascend\"],\n  },\n  {\n    title: \"Email\",\n    dataIndex: \"email\",\n    //sorter: (a, b) => a.email - b.email,\n    responsive: [\"lg\"],\n    sorter: (a, b) => {\n      if (a.email < b.email) return 1;\n      if (b.email < a.email) return -1;\n      return 0;\n    },\n    sortDirections: [\"descend\", \"ascend\"],\n  },\n  // {\n  //   title: \"Profesor\",\n  //   dataIndex: \"profesor\",\n  //   // sorter: (a, b) => a.profesor - b.profesor,\n  //   responsive: [\"lg\"],\n  //   sorter: (a, b) => {\n  //     if (a.profesor < b.profesor) return 1;\n  //     if (b.profesor < a.profesor) return -1;\n  //     return 0;\n  //   },\n  //   sortDirections: [\"descend\", \"ascend\"],\n  // },\n  // {\n  //   title: \"\",\n  //   key: \"accion\",\n  //   dataIndex: \"accion\",\n  //   render: () => (\n  //     <Space size=\"middle\">\n  //       <a title=\"Ver\">\n  //         <FontAwesomeIcon icon={faEye} className=\"view-icon\" />\n  //       </a>\n  //       <a title=\"Editar\">\n  //         <FontAwesomeIcon icon={faEdit} className=\"view-icon\" />\n  //       </a>\n  //       <a title=\"Eliminar\">\n  //         <FontAwesomeIcon icon={faTimes} className=\"delete-icon\" />\n  //       </a>\n  //     </Space>\n  //   ),\n  // },\n];\n\n// const data = [];\n\nconst showHeader = true;\n\nconst pagination = { position: \"bottom\" };\n\nconst Grupos = () => {\n  // const { token } = useContext(User);\n  const [datos, setDatos] = useState();\n\n  const array = [];\n\n  useEffect(async () => {\n    if (sessionStorage.getItem(\"token\") && sessionStorage.getItem(\"user\")) {\n      await axios\n        .get(\"group-usuario\")\n        .then((response) => {\n          //console.log(response.data);\n          if (response.status >= 200 && response.status <= 205) {\n            //console.log(response.data[1].nombre);\n            //console.log(response.data, response.data.length);\n            for (let i = 0; i < response.data.length; i++) {\n              //console.log(response.data[i].email);\n              if (response.data[i].email) {\n                array.push({\n                  key: i,\n                  nombre: response.data[i].nombre,\n                  apellidos: response.data[i].apellidos,\n                  email: response.data[i].email,\n                  id_grupo: response.data[i].id_grupo,\n                  grupo: response.data[i].nombre_grupo,\n                });\n              } else {\n                array.push({\n                  key: i,\n                  nombre: (\n                    <>\n                      {response.data[i].nombre}&nbsp;&nbsp;\n                      <a\n                        className=\"btn btn-primary\"\n                        onClick={(e) => {\n                          onEdit(response.data[i].id, response.data[i].nombre);\n                        }}\n                      >\n                        <FontAwesomeIcon icon={faEdit} className=\"edit-icon\" />\n                      </a>\n                      &nbsp;&nbsp;\n                      <a\n                        className=\"btn btn-danger\"\n                        onClick={(e) => {\n                          onDelete(response.data[i].id);\n                        }}\n                      >\n                        <FontAwesomeIcon\n                          icon={faTimes}\n                          className=\"delete-icon\"\n                        />\n                      </a>\n                    </>\n                  ),\n                  apellidos: response.data[i].apellidos,\n                  email: response.data[i].email,\n                  id_grupo: response.data[i].id_grupo,\n                  grupo: response.data[i].nombre_grupo,\n                });\n              }\n            }\n            //console.log(array1);\n\n            //history.push(\"/\");\n          }\n        })\n        .catch(function (error) {\n          if (error.status == 401) {\n            swal({\n              title: \"Error acceso \" + error.response.status,\n              text: \"Error, no tienes acceso a esta sección.\",\n              icon: \"error\",\n              button: \"Aceptar\",\n              timer: \"3000\",\n            });\n          } else {\n            swal({\n              title: \"Error interno \" + error.response.status,\n              text: \"Error interno, vuelve a intentarlo en unos momentos.\",\n              icon: \"error\",\n              button: \"Aceptar\",\n              timer: \"3000\",\n            });\n          }\n        });\n      //if (usuarioLogeado.id_profesor) {\n      //} else {\n      //console.log(\"ALUMNO\");\n      //columns.splice(5);\n      //}\n    }\n    //console.log(array1);\n    //console.log(array1);\n    setDatos(array);\n  }, []);\n\n  const onEdit = async (id, nombreUsuario) => {\n    // swal({\n    //   title: \"Error acceso \" + id,\n    // });\n    Swal.fire({\n      title: \"Editar\",\n      html: `<label for='Enombre'>Nombre:</label>\n      <input class=\"swal2-input\" id='Enombre' type='text' value='${nombreUsuario}'>\n      `,\n      // <input id='Eprofe' type='checkbox'>\n      // <label class=\"swal2-input\" for='Eprofe'>&nbsp;Es profesor</label><br>\n      // <input id='Eadmin' type='checkbox'>\n      // <label class=\"swal2-input\" for='Eadmin'>&nbsp;Es admin</label>\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Editar\",\n      cancelButtonText: \"Cancelar\",\n      focusConfirm: false,\n      preConfirm: () => {\n        const Enombre = Swal.getPopup().querySelector(\"#Enombre\").value;\n        if (!Enombre) {\n          Swal.showValidationMessage(`Algún campo obligatorio vacío`);\n        }\n        return {\n          Enombre: Enombre,\n        };\n      },\n    }).then((result) => {\n      if (result.isConfirmed) {\n        swal({\n          //title: \"Comprobando ...\",\n          icon: carga,\n          button: false,\n          allowOutsideClick: false,\n        });\n        let peticion = [];\n        peticion = {\n          nombre: `${result.value.Enombre}`,\n        };\n        axios\n          .put(\"grupo/\" + `${id}`, peticion)\n          .then((response) => {\n            //console.log(response.data);\n            if (response.status >= 200 && response.status <= 205) {\n              //console.log(response.data[1].nombre);\n              //console.log(response.data);\n              window.location.reload(true);\n              //Users.array1[key].nombreUsuario = response.data.nombreUsuario;\n              //Users.array1[key].nombre = response.data.nombre;\n              //Users.array1[key].apellidos = response.data.apellidos;\n\n              // swal({\n              //   icon: \"success\",\n              //   title: \"Actualizado\",\n              //   text: `\n              //     Usuario: ${result.value.EnombreUsuario}\n              //     Nombre: ${result.value.Enombre}\n              //     Apellidos: ${result.value.Eapellidos}\n              //     Email: ${result.value.Eemail}\n              //   `,\n              // });\n            }\n          })\n          .catch(function (error) {\n            if (error.status == 401) {\n              swal({\n                title: \"Error acceso \" + error.response.status,\n                text: \"Error, no tienes acceso a esta sección.\",\n                icon: \"error\",\n                button: \"Aceptar\",\n                timer: \"3000\",\n              });\n            } else {\n              swal({\n                title: \"Error interno \" + error.response.status,\n                text: \"Error interno, vuelve a intentarlo en unos momentos.\",\n                icon: \"error\",\n                button: \"Aceptar\",\n                timer: \"3000\",\n              });\n            }\n          });\n      }\n    });\n  };\n\n  const onCreateBut = () => {\n    const usuarioLogeado = JSON.parse(sessionStorage.getItem(\"user\"));\n\n    if (usuarioLogeado) {\n      if (usuarioLogeado.id_profesor) {\n        return (\n          <CreateButton\n            className=\"btn\"\n            onClick={(e) => {\n              onCreate();\n            }}\n          >\n            + Crear Grupo\n          </CreateButton>\n        );\n      } else {\n        columns.splice(5);\n      }\n    }\n  };\n\n  const onCreate = async () => {\n    var peticion = [];\n\n    Swal.fire({\n      title: \"Crear grupo\",\n      html: `\n      <label for='Enombre'>Nombre:</label>\n      <input class=\"swal2-input\" id='Enombre' type='text' placeholder=\"Nombre\">`,\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Crear\",\n      cancelButtonText: \"Cancelar\",\n      focusConfirm: false,\n      preConfirm: () => {\n        const Enombre = Swal.getPopup().querySelector(\"#Enombre\").value;\n        if (!Enombre) {\n          Swal.showValidationMessage(`Algún campo obligatorio vacío`);\n        }\n        return {\n          Enombre: Enombre,\n        };\n      },\n    }).then((result) => {\n      if (result.isConfirmed) {\n        peticion = {\n          nombre: `${result.value.Enombre}`,\n        };\n        peticionCrear(peticion);\n      }\n    });\n  };\n\n  const peticionCrear = async (peticion) => {\n    await axios\n      .post(\"grupo\", peticion)\n      .then((response) => {\n        //console.log(response.data);\n        if (response.status >= 200 && response.status <= 205) {\n          //console.log(response.data[1].nombre);\n          //console.log(response.data);\n          window.location.reload(true);\n        }\n      })\n      .catch(function (error) {\n        if (error.status == 401) {\n          swal({\n            title: \"Error acceso \" + error.response.status,\n            text: \"Error, no tienes acceso a esta sección.\",\n            icon: \"error\",\n            button: \"Aceptar\",\n            timer: \"3000\",\n          });\n        } else {\n          swal({\n            title: \"Error interno \" + error.response.status,\n            text: \"Error interno, vuelve a intentarlo en unos momentos.\",\n            icon: \"error\",\n            button: \"Aceptar\",\n            timer: \"3000\",\n          });\n        }\n      });\n  };\n\n  const onDelete = (id) => {\n    swal({\n      title: \"¿Estás seguro?\",\n      text: \"Eliminarás a todos los usuarios del grupo y una vez eliminado no podrás volver a recuperarlo.\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        //SI\n        //console.log(rol);\n\n        swal({\n          //title: \"Comprobando ...\",\n          icon: carga,\n          button: false,\n          allowOutsideClick: false,\n        });\n        axios\n          .delete(\"grupo/\" + id)\n          .then((response) => {\n            //console.log(response.data);\n            if (response.status >= 200 && response.status <= 205) {\n              var usuarioLogeado = JSON.parse(sessionStorage.getItem(\"user\"));\n              if (usuarioLogeado.id_profesor) {\n                window.location.reload(true);\n              } else {\n                sessionStorage.clear();\n                window.location.href = \"/\";\n              }\n              swal({\n                title: \"Grupo eliminado\",\n                text: \"  \",\n                icon: \"success\",\n                button: false,\n                timer: \"1800\",\n              });\n            }\n          })\n          .catch(function (error) {\n            //console.log(\"EEEEEEEEEEEEEEEE\", error, \"AAAAAAAAAAAAAAAAAAA\");\n            if (error.status == 401) {\n              swal({\n                title: \"Error acceso \" + error.response.status,\n                text: \"Error, no tienes acceso a esta sección.\",\n                icon: \"error\",\n                button: \"Aceptar\",\n                timer: \"3000\",\n              });\n            } else {\n              //console.log(error.response.data[\"Error\"]);\n              swal({\n                title: \"Error \" + error.response.status,\n                text: \"El grupo tiene alumnos asignados\",\n                icon: \"error\",\n                button: \"Aceptar\",\n                timer: \"3000\",\n              });\n            }\n          });\n      } else {\n        //swal(\"Grupo no eliminado\");\n      }\n    });\n  };\n\n  const [state, setState] = useState({\n    bordered: false,\n    loading: false,\n    pagination,\n    size: \"default\",\n    showHeader,\n    rowSelection: {},\n    scroll: undefined,\n    hasData: true,\n    tableLayout: \"fixed\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    xScroll: false,\n    yScroll: false,\n  });\n  var usuarioLogeado = JSON.parse(sessionStorage.getItem(\"user\"));\n  var hola = \"Estos son los datos de tu grupo.\";\n  if (JSON.parse(usuarioLogeado.id_profesor)) {\n    columns.splice(1);\n    hola = \"Estos son los grupos que hay registrados.\";\n  }\n\n  const handleDataChange = (hasData) => {\n    this.setState({ hasData });\n  };\n\n  const scroll = {};\n  if (state.yScroll) {\n    scroll.y = 240;\n  }\n  if (state.xScroll) {\n    scroll.x = \"100vw\";\n  }\n\n  const tableColumns = columns.map((item) => ({\n    ...item,\n    ellipsis: state.ellipsis,\n  }));\n  if (state.xScroll === \"fixed\") {\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = \"right\";\n  }\n\n  const nombreUsu = sessionStorage.getItem(\"user\").username;\n\n  const mensajeGrupo = () => {\n    var usuarioLogeado = JSON.parse(sessionStorage.getItem(\"user\"));\n\n    if (array[0].grupo) {\n      return (\n        usuarioLogeado.username +\n        \" estas en el grupo \" +\n        array[0].grupo +\n        \" con estos otros usuarios.\"\n      );\n    } else {\n      return usuarioLogeado.username + \" no estás asignado en ningún grupo.\";\n    }\n  };\n\n  return (\n    <>\n      {onCreateBut()}\n      <TableWrapper>\n        {/* <CreateButton>+ Crear grupo</CreateButton> */}\n        <Table\n          {...state}\n          pagination={{ position: [state.top, state.bottom], pageSize: 6 }}\n          columns={tableColumns}\n          dataSource={datos ? datos : null}\n          scroll={scroll}\n          className=\"groups-table\"\n        />\n      </TableWrapper>\n    </>\n  );\n};\n\nexport default Grupos;\n","import SideNavBar from \"../../../components/common/sideNav/SideNav\";\nimport SearchBar from \"../../../components/searchBar/SearchBar\";\nimport Groups from \"../../../components/groups/Groups\";\n\nconst GroupsLanding = () => {\n  return (\n    <>\n      <SideNavBar />\n      <div className=\"container\">\n        <SearchBar />\n        <Groups />\n      </div>\n    </>\n  );\n};\n\nexport default GroupsLanding;\n"],"sourceRoot":""}