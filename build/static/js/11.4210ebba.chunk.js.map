{"version":3,"sources":["components/practices/practice/TableCompound.jsx","components/practices/practice/Practice.styled.jsx","components/practices/practice/TableData.jsx","components/practices/practice/Practice.jsx","containers/practices/view/PracticePage.jsx"],"names":["TableWrapper","styled","div","columns","title","dataIndex","sorter","a","b","picos","substancias","minutos","altura","data","i","push","key","pagination","position","CompoundTable","useState","bordered","loading","size","showHeader","rowSelection","scroll","undefined","hasData","tableLayout","top","bottom","xScroll","yScroll","state","y","x","tableColumns","map","item","ellipsis","fixed","length","className","dataSource","Practices","layout","column","Item","label","inicioChart","finChart","tiempoProcesamientoColumna","inicio","peak","fin","forEach","columna","Practice","class","id","height","width","datasets","borderColor","borderWidth","pointRadius","pointHoverRadius","fill","tension","showLine","options","maintainAspectRatio","responsive","tooltips","enabled","plugins","legend","display","text","scales","xAxes","type","time","displayFormats","second","scaleLabel","labelString","gridLines","color","drawOnChartArea","yAxes","onClick","grafico","window","document","getElementById","html2canvas","then","canvas","img","toDataURL","pdf","jspdf","addImage","clientWidth","clientHeight","save","aPdf","htmlFor","name","cols","rows","readonly","TableCompound","TableData","PracticePage","SideNav"],"mappings":"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","file":"static/js/11.4210ebba.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Table, Space } from \"antd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEdit, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { TableWrapper } from \"./Practice.styled\";\n\nconst columns = [\n  {\n    title: \"Picos\",\n    dataIndex: \"picos\",\n    sorter: (a, b) => a.picos - b.picos,\n  },\n  {\n    title: \"Substancias\",\n    dataIndex: \"substancias\",\n    sorter: (a, b) => a.substancias - b.substancias,\n  },\n  {\n    title: \"Minutos\",\n    dataIndex: \"minutos\",\n    sorter: (a, b) => a.minutos - b.minutos,\n  },\n  {\n    title: \"Altura\",\n    dataIndex: \"altura\",\n    sorter: (a, b) => a.altura - b.altura,\n  },\n];\n\nconst data = [];\nfor (let i = 1; i <= 6; i++) {\n  data.push({\n    key: i,\n    picos: i,\n    substancias: \"Naphtalene\",\n    minutos: 3.3,\n    altura: 125,\n  });\n}\n\nconst showHeader = true;\n\nconst pagination = { position: \"bottom\" };\n\nconst CompoundTable = () => {\n  const [state, setState] = useState({\n    bordered: false,\n    loading: false,\n    pagination,\n    size: \"default\",\n    showHeader,\n    rowSelection: {},\n    scroll: undefined,\n    hasData: true,\n    tableLayout: \"fixed\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    xScroll: false,\n    yScroll: false,\n  });\n\n  const handleDataChange = (hasData) => {\n    this.setState({ hasData });\n  };\n\n  const scroll = {};\n  if (state.yScroll) {\n    scroll.y = 240;\n  }\n  if (state.xScroll) {\n    scroll.x = \"100vw\";\n  }\n\n  const tableColumns = columns.map((item) => ({\n    ...item,\n    ellipsis: state.ellipsis,\n  }));\n  if (state.xScroll === \"fixed\") {\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = \"right\";\n  }\n\n  return (\n    <TableWrapper className=\"col-6\">\n      <Table\n        {...state}\n        pagination={{ position: [state.top, state.bottom] }}\n        columns={tableColumns}\n        dataSource={state.hasData ? data : null}\n        scroll={scroll}\n        className=\"compound-table\"\n      />\n    </TableWrapper>\n  );\n};\n\nexport default CompoundTable;\n","import styled from \"styled-components\";\n\nexport const TableWrapper = styled.div`\n  & .compound-table,\n  .data-table {\n    & table {\n      border-collapse: separate;\n      border-spacing: 0 0.3rem;\n    }\n    & .ant-table-selection,\n    .ant-checkbox-wrapper {\n      display: none;\n    }\n    & tr {\n      height: 5rem;\n      font-size: 17px;\n      &:hover > td {\n        background-color: #6bb1c5;\n      }\n      & td:last-of-type {\n        text-align: center;\n      }\n    }\n    & thead tr th {\n      background-color: #0a1128;\n      color: #fefcfb;\n    }\n    & tr td {\n      background-color: #0a1128;\n      color: #fefcfb;\n    }\n    & tr td:first-child,\n    tr th:first-child {\n      border-top-left-radius: 0.3rem;\n      border-bottom-left-radius: 0.3rem;\n    }\n    & tr td:last-child,\n    tr th:last-child {\n      border-top-right-radius: 0.3rem;\n      border-bottom-right-radius: 0.3rem;\n    }\n    & .ant-table-column-has-sorters:hover {\n      background-color: #6bb1c5;\n    }\n    & td div div {\n      &:first-child {\n        a path {\n          fill: #3d6e9c;\n        }\n      }\n      &:last-child {\n        a path {\n          fill: #c56b6b;\n        }\n      }\n      & a {\n        padding: 0rem 1rem;\n        border: none;\n        border-radius: 0.2rem;\n        font-weight: 400;\n        text-decoration: none;\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\n\nimport { Descriptions } from \"antd\";\n\nconst Practices = () => {\n  return (\n    <Descriptions\n      title=\"Datos importantes de la práctica\"\n      layout=\"horizontal\"\n      column={1}\n      bordered={true}\n      className=\"col-6\"\n    >\n      <Descriptions.Item label=\"Longitud columna\">150 mm</Descriptions.Item>\n      <Descriptions.Item label=\"Diámetro interior columna\">\n        4,6 mm\n      </Descriptions.Item>\n      <Descriptions.Item label=\"Tamaño de partícula\">5 um</Descriptions.Item>\n      <Descriptions.Item label=\"Temperatura\"> 35º</Descriptions.Item>\n      <Descriptions.Item label=\"Velocidad de flujo\">\n        1.5 ml/min\n      </Descriptions.Item>\n      <Descriptions.Item label=\"Diluyente\">ACN 50% + H2O 50%</Descriptions.Item>\n      <Descriptions.Item label=\"Detector UV\">254 nm</Descriptions.Item>\n    </Descriptions>\n  );\n};\n\nexport default Practices;\n","import React, { useState } from \"react\";\nimport { Scatter } from \"react-chartjs-2\";\nimport html2canvas from \"html2canvas\";\nimport jspdf from \"jspdf\";\n\nimport TableCompound from \"./TableCompound\";\nimport TableData from \"./TableData\";\n\n//Modelo de objeto JSON 'columnas' obtenido de API\nconst columnas = [\n  { inicio: { x: 20, y: 0 }, peak: { x: 21, y: 130 }, fin: { x: 22, y: 0 } },\n  { inicio: { x: 29, y: 0 }, peak: { x: 31, y: 215 }, fin: { x: 33, y: 0 } },\n  { inicio: { x: 80, y: 0 }, peak: { x: 85, y: 110 }, fin: { x: 90, y: 0 } },\n];\n\n//tiempo medido en segundos\nconst tiempoProcesamientoColumna = 150;\nconst inicioChart = { x: 0, y: 0 };\nconst finChart = { x: tiempoProcesamientoColumna * 1000, y: 0 };\n\n//conversion de segundos a milisegundos y push a array data\nlet data = [];\n\ncolumnas.forEach(function (columna) {\n  data.push(inicioChart);\n  columna.inicio.x *= 1000;\n  data.push(columna.inicio);\n  columna.peak.x *= 1000;\n  data.push(columna.peak);\n  columna.fin.x *= 1000;\n  data.push(columna.fin);\n  data.push(finChart);\n});\n\nconst aPdf = () => {\n  let grafico = window.document.getElementById(\"aPdf\");\n\n  html2canvas(grafico).then((canvas) => {\n    const img = canvas.toDataURL(\"image/png\");\n    const pdf = new jspdf(\"l\", \"px\", \"a4\");\n    pdf.addImage(\n      img,\n      \"png\",\n      50, //x\n      25, // y\n      grafico.clientWidth / 2, // width\n      grafico.clientHeight / 2, // height\n      \"\",\n      \"NONE\"\n    );\n    pdf.save(\"practica.pdf\");\n  });\n};\n\nconst Practice = () => {\n  const [state, setState] = useState(false);\n  return (\n    <>\n      <h1 className=\"p-5 text-center\">Prueba práctica</h1>\n\n      <div class=\"row\">\n        <div class=\"col col-md-6\">\n          <div>\n            <Scatter\n              id=\"aPdf\"\n              height={400}\n              width={600}\n              data={{\n                datasets: [\n                  {\n                    data,\n                    borderColor: \"black\",\n                    borderWidth: 1,\n                    pointRadius: 0,\n                    pointHoverRadius: 0,\n                    fill: false,\n                    tension: 0.02,\n                    showLine: true,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                responsive: true,\n                tooltips: {\n                  enabled: false,\n                },\n                plugins: {\n                  legend: false,\n                },\n                title: {\n                  display: true,\n                  text: \"HPLC\",\n                },\n                scales: {\n                  xAxes: [\n                    {\n                      type: \"time\",\n                      time: {\n                        displayFormats: {\n                          second: \"mm:ss\",\n                        },\n                      },\n                      scaleLabel: {\n                        display: true,\n                        labelString: \"Tiempo\",\n                      },\n                      gridLines: {\n                        color: \"#888\",\n                        drawOnChartArea: false,\n                      },\n                    },\n                  ],\n                  yAxes: [\n                    {\n                      gridLines: {\n                        color: \"#888\",\n                        drawOnChartArea: false,\n                      },\n                      scaleLabel: {\n                        display: true,\n                        labelString: \"Altura\",\n                      },\n                    },\n                  ],\n                },\n              }}\n            />\n          </div>\n          <div>\n            <button onClick={() => aPdf()}>Generar PDF</button>\n          </div>\n        </div>\n        <div className=\"col-md-6 commentsWrapper\">\n          <div className=\"row\">\n            <label htmlFor=\"respuestaAlumno\">Respuesta Alumno</label>\n            <textarea\n              name=\"respuestaAlumno\"\n              id=\"respuestaAlumno\"\n              cols=\"30\"\n              rows=\"8\"\n              readonly\n            ></textarea>\n            <label htmlFor=\"comentarioProfesor\">Comentario Profesor</label>\n            <textarea\n              name=\"comentarioProfesor\"\n              id=\"comentarioProfesor\"\n              cols=\"30\"\n              rows=\"8\"\n              readonly\n            ></textarea>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <TableCompound />\n        <TableData />\n      </div>\n    </>\n  );\n};\n\nexport default Practice;\n","import React, { useEffect, useState, createContext } from \"react\";\n\nimport SideNavBar from \"../../../components/common/sideNav/SideNav\";\nimport Practice from \"../../../components/practices/practice/Practice\";\n\nconst PracticePage = () => {\n  const [state, setState] = useState(false);\n\n  return (\n    <>\n      <SideNavBar />\n      <div className=\"container\">\n        <Practice />\n      </div>\n      ;\n    </>\n  );\n};\n\nexport default PracticePage;\n"],"sourceRoot":""}